# .github/workflows/release.yml
name: Release

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find project file
        id: project
        run: |
          # Look for the .csproj file
          if [ -f "PgsToSrt/PgsToSrt.csproj" ]; then
            echo "path=PgsToSrt/PgsToSrt.csproj" >> $GITHUB_OUTPUT
          elif [ -f "src/PgsToSrt/PgsToSrt.csproj" ]; then
            echo "path=src/PgsToSrt/PgsToSrt.csproj" >> $GITHUB_OUTPUT
          else
            echo "Project structure:"
            find . -name "*.csproj" -type f
            echo "Directory contents:"
            ls -la
            exit 1
          fi

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Extract version from tag
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION="dev-$(git rev-parse --short HEAD)"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Restore dependencies
        run: dotnet restore ${{ steps.project.outputs.path }}

      - name: Build and publish
        run: |
          dotnet publish ${{ steps.project.outputs.path }} \
            --configuration Release \
            --runtime linux-x64 \
            --self-contained true \
            --output ./artifacts/linux-x64 \
            --verbosity minimal \
            -p:Version=${{ steps.version.outputs.version }} \
            -p:AssemblyVersion=${{ steps.version.outputs.version }}.0 \
            -p:FileVersion=${{ steps.version.outputs.version }}.0 \
            -p:PublishSingleFile=true \
            -p:PublishTrimmed=true \
            -p:TrimMode=partial \
            -p:DebugType=None \
            -p:DebugSymbols=false

      - name: Create archive
        run: |
          cd ./artifacts/linux-x64
          tar -czf ../../PgsToSrt-${{ steps.version.outputs.version }}-linux-x64.tar.gz .
          cd ../..
          ls -la PgsToSrt-${{ steps.version.outputs.version }}-linux-x64.tar.gz

      - name: Create checksums
        run: |
          sha256sum PgsToSrt-${{ steps.version.outputs.version }}-linux-x64.tar.gz > checksums.txt
          echo "Checksums created:"
          cat checksums.txt

      - name: Upload to release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            PgsToSrt-${{ steps.version.outputs.version }}-linux-x64.tar.gz
            checksums.txt
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}